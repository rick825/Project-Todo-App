{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Node Projects\\\\React\\\\Mini-projects\\\\todo-list\\\\src\\\\component\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Main.css';\n// import { useToggle } from \"@uidotdev/usehooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const bioData = [{\n    id: 1,\n    name: \"Akash\",\n    score: \"23\"\n  }, {\n    id: 2,\n    name: \"Dimple\",\n    score: \"22\"\n  }];\n  const InitialBtnText = \"Update\";\n  const [myArray, setmyArray] = useState(bioData);\n  const [toggle, setToggle] = useState(true);\n  const [btntext, setText] = useState(InitialBtnText);\n\n  // handling forms\n  const [sid, setId] = useState(\"\");\n  const [fname, setFname] = useState(\"\");\n  const [score, setScore] = useState(\"\");\n  const handleName = e => {\n    setFname(e.target.value);\n  };\n  const handleID = e => {\n    setId(parseInt(e.target.value));\n  };\n  const handleScore = e => {\n    setScore(e.target.value);\n  };\n  const clearArray = () => {\n    setmyArray([]);\n  };\n  const handleClick = () => {\n    setToggle(!toggle);\n    if (!toggle) {\n      setText(InitialBtnText);\n      console.log(\"running\");\n    } else {\n      setText('Cancel');\n    }\n  };\n  const updateArray = () => {\n    const isFound = myArray.some(el => el.id === sid);\n    console.log(isFound);\n    if (isFound) {\n      setmyArray(myArray.map(obj => {\n        if (obj.id === sid) {\n          return {\n            ...obj,\n            name: fname,\n            score: score\n          };\n        } else {\n          return obj;\n        }\n      }));\n    } else {\n      const new_data = {\n        id: sid,\n        name: fname,\n        score: score\n      };\n      setmyArray([...myArray, new_data]);\n    }\n\n    // setmyArray([...myArray,newState]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [myArray.map(currElm => /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"head\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name elm\",\n        children: [\"Hello \", currElm.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 73\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score elm\",\n        children: [\" Score : \", currElm.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 129\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"removebtn btn\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }, this)]\n    }, currElm.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 35\n    }, this)), !toggle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Please enter your ID\",\n        className: \"inputelm\",\n        onChange: handleID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please write your Name\",\n        className: \"inputelm\",\n        onChange: handleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Please write your Score\",\n        className: \"inputelm\",\n        onChange: handleScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addbtn btn inputelm\",\n        onClick: updateArray,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: function (event) {\n          handleClick();\n        },\n        children: btntext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: function (event) {\n          clearArray();\n        },\n        children: \" Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"9DO1GtUjAVuc74cHPCYmXlZIAZA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","bioData","id","name","score","InitialBtnText","myArray","setmyArray","toggle","setToggle","btntext","setText","sid","setId","fname","setFname","setScore","handleName","e","target","value","handleID","parseInt","handleScore","clearArray","handleClick","console","log","updateArray","isFound","some","el","map","obj","new_data","children","currElm","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","event","_c","$RefreshReg$"],"sources":["E:/Work/Node Projects/React/Mini-projects/todo-list/src/component/Main.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './Main.css';\r\n// import { useToggle } from \"@uidotdev/usehooks\";\r\n\r\nconst Main = () =>{\r\n   \r\n  const bioData = [\r\n        {id:1,name:\"Akash\" , score:\"23\"},\r\n          {id:2,name:\"Dimple\", score:\"22\"},\r\n    ];\r\n   const InitialBtnText = \"Update\";\r\n      const [myArray, setmyArray] = useState(bioData);\r\n      const [toggle, setToggle] = useState(true);\r\n      const [btntext, setText] = useState(InitialBtnText);\r\n\r\n      // handling forms\r\n      const [sid, setId] = useState(\"\");\r\n      const [fname, setFname] = useState(\"\");\r\n      const [score,setScore] = useState(\"\");\r\n  \r\n  const handleName = (e) => {\r\n    setFname(e.target.value);\r\n  };\r\n\r\n   const handleID = (e) =>{\r\n    setId(parseInt(e.target.value));\r\n  }\r\n\r\n   const handleScore = (e) =>{\r\n  setScore(e.target.value);\r\n  }\r\n\r\n\r\n    \r\n      const clearArray = () =>{\r\n      setmyArray([]);\r\n    }\r\n\r\n      const handleClick = () => {\r\n      setToggle(!toggle);\r\n     if(!toggle){\r\n      setText(InitialBtnText);\r\n      console.log(\"running\");\r\n     }else{\r\n      setText('Cancel'); \r\n     }  \r\n  };\r\n\r\n\r\n    const updateArray = () =>{\r\n     \r\n      const isFound = myArray.some(el => el.id === sid);\r\n  \r\n      console.log(isFound);\r\n  \r\n    if(isFound){\r\n    setmyArray(myArray.map(obj =>{\r\n\r\n        if(obj.id === sid){\r\n          return {...obj,name: fname,score : score}\r\n        }else{\r\n       return obj;\r\n      }\r\n     \r\n    }));\r\n  }else{\r\n     const new_data = {\r\n          id : sid,\r\n          name: fname,\r\n          score: score\r\n     }\r\n     setmyArray([...myArray,new_data])\r\n  \r\n  }\r\n  \r\n\r\n\r\n\r\n    // setmyArray([...myArray,newState]);\r\n \r\n    };\r\n\r\n\r\n\r\n    return (\r\n       <>\r\n        {myArray.map((currElm) => <h2 className=\"head\" key={currElm.id}><span className=\"name elm\">Hello {currElm.name} </span> <span className='score elm'> Score : {currElm.score}</span> \r\n           <button className='removebtn btn'>Remove</button>\r\n          </h2>)\r\n        }\r\n\r\n        {!toggle && <div className=\"input-container\" >\r\n        <input type=\"number\" placeholder='Please enter your ID' className='inputelm' onChange={handleID} />\r\n\r\n         <input \r\n        type=\"text\"  placeholder='Please write your Name' className='inputelm' onChange={handleName} />\r\n        \r\n        <input \r\n        type=\"number\"  placeholder='Please write your Score' className='inputelm' onChange={handleScore} />\r\n         <button className='addbtn btn inputelm' onClick={updateArray}>Add</button>\r\n\r\n        </div>}\r\n           <div className='btnContainer'>\r\n          <button className=\"btn\" onClick={function(event){  handleClick()}}>{btntext}</button>\r\n        <button className=\"btn\" onClick={function(event){clearArray()}}> Clear</button>\r\n        </div>\r\n       </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}